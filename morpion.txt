''' DEBUT '''

' --- Importation du ou des modules --- '

On admet qu'une fonction 'input' existe et qu'elle récupère la réponse à ce qu'on demande à l'utilisateur dans le terminal de commande.

' --- Définition de la classe Player --- '

On crée une classe Player qui récupèrera l'action du joueur, son nom et son signe.

    On crée une méthode __init__ qui initialise les objets de classe Player, prennant pour argument son nom et son signe.
        On assigne à la variable nom de cet objet le nom donné en argument
        On assigne à la variable signe de cet objet le signe donné en argument

    On crée une méthode PlayersPlay, prennant en argument x et y, les coordonnées du tableau correspondant au choix du joueur
        On retourne x et y auxquels on soustrait 1 pour avoir des coordonnées correspondantes à des index de listes.

' --- Définition de la classe Morpion --- '

On crée une classe Morpion qui prend en 'paramètre' la classe Joueur, pour en utiliser des éléments plus tard.

    On crée une méthode __init__ qui initialise les objets de classe Morpion, ne prennant aucun argument
        On assigne à la grille de cette objet une liste vide

    On crée une méthode PrepareGrid qui initialise la grille du jeu, ne prennant aucun argument
        On assigne à la variable row1 une liste de longueur 3, contenant des '-' à chaque index.
        On assigne à la variable row2 une liste de longueur 3, contenant des '-' à chaque index.
        On assigne à la variable row3 une liste de longueur 3, contenant des '-' à chaque index.
        On ajoute à la grille de cette objet la variable row1
        On ajoute à la grille de cette objet la variable row2 
        On ajoute à la grille de cette objet la variable row3


    On crée une méthode PrintGrid, qui affiche la grille de l'objet, ne prennant aucun argument
        Pour i allant de 0 à 3 :
            faire :
            Afficher l'élément i de la grille de l'objet
    
    On crée une méthode VerifyEmptyCase, qui verifiera si la case aux coordonnées x et y (x et y les arguments de la méthode) est libre ou non
        si l'élément y-1 de l'élément x-1 de la grille de l'objet est égal à X ou O :
            alors :
            on renvoie False
        sinon :
            alors :
            on renvoie True

    On crée une méthode UpdateGrid, qui mettra jour à jour l'élément selectionné par le joueur dans la grille de l'objet désigné, prennant en argument x, y (coordonnées) 
    et Player (un joueur)
        Si la case sélectionné par le joueur dans la grille est libre :
            alors :
            si le signe du joueur Player est X :
                alors :
                on assigne X à l'élément y-1 de l'élément x-1 de la grille de l'objet sélectionné 
            sinon :
                alors :
                on assigne O à l'élément y-1 de l'élément x-1 de la grille de l'objet sélectionné 
            else:
        sinon : 
            alors : 
            Afficher le message : "Choose another case please, this one is already full."

    On crée une méthode VerifyLine, qui verifie si une des lignes de la grille est une victoire, ne prennant aucun argument
        on assigne à la variable win False
        pour i allant de 0 à 3 :
            faire :
            si l'élément d'index 0 de l'élément i de la grille est égal à X et l'élément d'index 1 de l'élément i de la grille est égal à X 
            et l'élément d'index 2 de l'élément i de la grille est égal à X :
                alors :
                on assigne à la variable win True
            sinon si l'élément d'index 0 de l'élément i de la grille est égal à O et l'élément d'index 1 de l'élément i de la grille est égal à O
            et l'élément d'index 2 de l'élément i de la grille est égal à O :
                alors : 
                on assigne à la variable win True
        on renvoie la variable win

    On crée une méthode VerifyColumn, qui verifie si une des colonnes de la grille est une victoire, ne prennant aucun argument
        on assigne à la variable win False
        pour i allant de 0 à 3 :
            faire :
            si l'élément d'index i de l'élément 0 de la grille est égal à X et l'élément d'index i de l'élément 1 de la grille est égal à X 
            et l'élément d'index i de l'élément 2 de la grille est égal à X :
                alors :
                on assigne à la variable win True
            sinon si l'élément d'index i de l'élément 0 de la grille est égal à O et l'élément d'index i de l'élément 1 de la grille est égal à O
            et l'élément d'index i de l'élément 2 de la grille est égal à O :
                alors : 
                on assigne à la variable win True
        on renvoie la variable win

    On crée une méthode VerifyDiagonal, qui verifie si une des diagonales de la grille est une victoire, ne prennant aucun argument
        on assigne à la variable win False
        si l'élément 0 de l'élément 0 de la grile est égal à X et l'élément 1 de l'élément 1 de la grille est égal à X et l'élément 2 de l'élément 2 de la grille est égal à X 
        ou l'élément 2 de l'élément 0 de la grile est égal à X et l'élément 1 de l'élément 1 de la grille est égal à X et l'élément 0 de l'élément 2 de la grille est égal à X :
            alors :
            on assigne à la variable win True
        si l'élément 0 de l'élément 0 de la grile est égal à O et l'élément 1 de l'élément 1 de la grille est égal à O et l'élément 2 de l'élément 2 de la grille est égal à O 
        ou l'élément 2 de l'élément 0 de la grile est égal à O et l'élément 1 de l'élément 1 de la grille est égal à O et l'élément 0 de l'élément 2 de la grille est égal à O :
            alors :
            on assigne à la variable win True
        on renvoie la variable win
        
    On crée une méthode VerifyWin, qui verifie si quelqu'un a gagné, ne prennant aucun argument
        si l'appel de la méthode VerifyLine renvoie True ou l'appel de la fonction VerifyColumn renvoie True ou l'appel de la fonction VerifyDiagonal renvoie True :
            alors :
            on renvoie True
        sinon :
            alors :
            on renvoie False

' --- Commandes pour jouer une partie ---'

On crée la fonction game, qui fera le déroulement de la partie, ne prennant aucun argument
    on assigne à la variable turn la valeur 0
    on assigne à la variable Player1 l'objet de classe Player avec comme nom Victor et comme signe X
    on assigne à la variable Player2 l'objet de classe Player avec comme nom Benjamin et comme signe O
    on assigne à la variable GameTicTacToe, l'objet de classe Morpion
    on assigne à la variable GameTicTacToe, le résultat de l'appel de la méthode PrepareGrid
    tant que la valeur de la variable turn est inférieur à 9 ou que le retour de l'appel de la méthode VerifyWin est différent de True :
        alors :
        On appelle la méthode PrintGrid pour l'objet GameTicTacToe
        si le reste de la division de tour par 2 est égal à 0 :
            alors :
            on assigne à la variable Player1ChoiceX l'entier correspondant au retour de l'appel de la fonction input
            on assigne à la variable Player1ChoiceY l'entier correspondant au retour de l'appel de la fonction input
            On appel la méthode UpdateGrid pour l'objet GameTicTacToe avec en argument Player1ChoiceX, Player1ChoiceY et Player1
            on ajoute 1 à la variable turn
            si le retour de l'appel de la méthode VerifyWin pour l'objet GameTicTacToe est égal à True :
                alors :
                on affiche un message de victoire
                On appelle la fonction PrintGrid pour l'objet GameTicTacToe
                on renvoie un espace vide pour sortir de la fonction 

        sinon :
            alors :
            on assigne à la variable Player2ChoiceX l'entier correspondant au retour de l'appel de la fonction input
            on assigne à la variable Player2ChoiceY l'entier correspondant au retour de l'appel de la fonction input
            On appel la méthode UpdateGrid pour l'objet GameTicTacToe avec en argument Player2ChoiceX, Player2ChoiceY et Player2
            on ajoute 1 à la variable turn
            si le retour de l'appel de la méthode VerifyWin pour l'objet GameTicTacToe est égal à True :
                alors :
                on affiche un message de victoire
                On appelle la fonction PrintGrid pour l'objet GameTicTacToe
                on renvoie un espace vide pour sortir de la fonction  
        
        On affiche un message vide
    On appelle la fonction PrintGrid pour l'objet GameTicTacToe
    On affiche un message d'égalité

On appelle la fonction game

''' FIN '''